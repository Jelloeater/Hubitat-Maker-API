version: '3'
vars:
    BUILD_DIR: hubitatcontrol
    IMAGE_NAME: hubitatcontrol
    DOCKER_FILE: Dockerfile
tasks:
    default:
        silent: true
        interactive: false
        cmds:
            - task: format
            - task: security
            - task: test
    commit:
        - task: format
        - task: docs
        - task: security
    publish:
        - task: format
        - task: security
        - task: test
        - task: build
        - poetry publish
    build:
        env:
            PIPENV_IGNORE_VIRTUALENVS: 1
        deps: [docs, clean]
        cmds:
            - poetry build
    setup:
        - python3 -m pip install pipx
        - python3 -m pipx ensurepath
        - pipx install poetry
        - poetry install
    test:
        silent: false
        interactive: false
        cmds:
            - poetry run vulture --min-confidence 100 {{.BUILD_DIR}}
            - poetry run xenon --max-absolute C --max-modules B --max-average B {{.BUILD_DIR}}
#            - poetry run mypy --install-types --non-interactive
#            - poetry run mypy {{.BUILD_DIR}} # Little too aggressive
            - poetry run pytest --cov --cov-fail-under=85 #--typeguard-packages={{.BUILD_DIR}} # Leave typeguard off for now
    clean:
        - rm -rf dist
        - rm -rf .mypy_cache
        - poetry cache clear _default_cache --all  --no-interaction
        - poetry cache clear PyPI --all  --no-interaction
        - poetry check
        - py3clean .
    format:
        silent: false
        interactive: false
        cmds:
            - poetry run isort --atomic .
            - poetry run black . --color #--diff
            - poetry run flake8
    docs:
        silent: false
        interactive: false
        cmds:
            - rm -rf docs
            - poetry run pdoc3 {{.BUILD_DIR}} -o docs -f
            - poetry run pyreverse {{.BUILD_DIR}} -d docs
            - poetry run mdformat docs
            - git add docs
    security:
        - poetry run whispers {{.BUILD_DIR}} # Check for security issues
        - poetry run bandit --silent -r {{.BUILD_DIR}}
        - poetry run tartufo scan-local-repo .
    install-hooks:
        cmds:
            - poetry run pre-commit install
    remove-hooks:
        ignore_error: true
        cmds:
            - poetry run pre-commit uninstall
            - rm .git/hooks -rf
    docker:
        - task: clean
        - docker build . -t {{.IMAGE_NAME}}:latest -f {{.DOCKER_FILE}}
        - docker run --env-file .env --rm --name {{.IMAGE_NAME}} {{.IMAGE_NAME}}:latest
    show_secrets:
        - git secret reveal -f
    save_secrets:
        - git secret hide -m -d
